datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
generator client {
  provider = "prisma-client-js"
}

enum UserStatus {
  active
  inactive
}

enum SubscriptionType {
  none
  basico
  romantico
  apaixonado
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  password     String
  status       String
  subscriptionId String
  subscription Subscription? @relation(fields: [subscriptionId], references: [id])
  specialDates SpecialDate[]
  timeline     Timeline[]
  wishlist     Wishlist[]
  lovemap      Lovemap[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt

  @@map("users")
}

model SpecialDate {
  id        String   @id @default(uuid())
  title     String
  date      DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("special_dates")
}

model Timeline {
  id          String   @id @default(uuid())
  title       String
  description String   @db.Text
  date        DateTime
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("timeline")
}

model Wishlist {
  id        String   @id @default(uuid())
  title     String
  link      String   @db.Text
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  purchased Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("wishlist")
}

model Lovemap {
  id        String   @id @default(uuid())
  title     String
  subtitle  String?
  location  String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("lovemap")
}

model Achievements {
  id          String  @id @default(uuid())
  title       String
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subscription {
  id        String   @id @default(uuid())
  title     String   @unique
  price     Float    
  users     User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("subscriptions")
}